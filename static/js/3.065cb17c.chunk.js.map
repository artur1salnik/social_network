{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","message","likes","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","reverse","map","p","id","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","headband","descriptionBlock","photos","large","Preloader","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.065cb17c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return  ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headband\":\"ProfileInfo_headband__UP7ZE\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2bg9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2eiih\",\"posts\":\"MyPosts_posts__Euy1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__mzqjG\"};","import classes from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://archilab.online/images/1/123.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = [...props.posts]\r\n        .reverse()\r\n        .map(p => <Post id={p.id} message={p.message} likes={p.likes}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='Enter your post'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React, {useState, useEffect} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.headband}>\r\n                <img src='https://miro.medium.com/max/11730/0*ihTZPO4iffJ8n69_'/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport classes from './Profile.module.css';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}